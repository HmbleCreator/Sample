"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/trpc/[trpc]";
exports.ids = ["pages/api/trpc/[trpc]"];
exports.modules = {

/***/ "@auth0/nextjs-auth0":
/*!**************************************!*\
  !*** external "@auth0/nextjs-auth0" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("@auth0/nextjs-auth0");

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@google/generative-ai":
/*!****************************************!*\
  !*** external "@google/generative-ai" ***!
  \****************************************/
/***/ ((module) => {

module.exports = import("@google/generative-ai");;

/***/ }),

/***/ "@trpc/server":
/*!*******************************!*\
  !*** external "@trpc/server" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("@trpc/server");;

/***/ }),

/***/ "@trpc/server/adapters/next":
/*!*********************************************!*\
  !*** external "@trpc/server/adapters/next" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = import("@trpc/server/adapters/next");;

/***/ }),

/***/ "superjson":
/*!****************************!*\
  !*** external "superjson" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("superjson");;

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/trpc/[trpc].ts */ \"(api)/./src/pages/api/trpc/[trpc].ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/trpc/[trpc]\",\n        pathname: \"/api/trpc/[trpc]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_trpc_trpc_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNC4wLjRfQGJhYmVsK2NvcmVANy4yOC4wX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wX19yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1yb3V0ZS1sb2FkZXIvaW5kZXguanM/a2luZD1QQUdFU19BUEkmcGFnZT0lMkZhcGklMkZ0cnBjJTJGJTVCdHJwYyU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdHJwYyUyRiU1QnRycGMlNUQudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDMkQ7QUFDM0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWNsb25lLz8zNzJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdHJwYy9bdHJwY11cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cnBjL1t0cnBjXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/auth0.config.ts":
/*!*****************************!*\
  !*** ./src/auth0.config.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth0Config: () => (/* binding */ auth0Config),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   getUser: () => (/* binding */ getUser),\n/* harmony export */   refreshSession: () => (/* binding */ refreshSession)\n/* harmony export */ });\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth0/nextjs-auth0 */ \"@auth0/nextjs-auth0\");\n/* harmony import */ var _auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Configuration for Auth0 session and token management\n */ const auth0Config = {\n    // Session configuration\n    session: {\n        // Absolute lifetime of the session in seconds (7 days)\n        absoluteDuration: 60 * 60 * 24 * 7,\n        // Session idle timeout in seconds (1 day)\n        idleTimeout: 60 * 60 * 24,\n        // How often to refresh the session in seconds (1 hour)\n        rollingDuration: 60 * 60\n    },\n    // Auth0 configuration\n    auth0: {\n        // Required scopes for your application\n        scope: \"openid profile email offline_access\",\n        // Enable refresh tokens\n        useRefreshTokens: true,\n        // Refresh tokens are used to fetch new tokens from the Auth0 server\n        refreshInterval: 300\n    }\n};\n/**\n * Gets the current session with extended type information\n */ async function getSession(req, res) {\n    try {\n        const session = await (0,_auth0_nextjs_auth0__WEBPACK_IMPORTED_MODULE_0__.getSession)(req, res);\n        // Log session info for debugging (without sensitive data)\n        if (session) {\n            console.log(\"Auth0 Session:\", {\n                hasIdToken: !!session.idToken,\n                hasAccessToken: !!session.accessToken,\n                hasRefreshToken: !!session.refreshToken,\n                user: session.user ? {\n                    sub: session.user.sub,\n                    email: session.user.email\n                } : null\n            });\n        }\n        return session;\n    } catch (error) {\n        console.error(\"Error getting Auth0 session:\", error);\n        return null;\n    }\n}\n/**\n * Gets the current user from the session\n */ async function getUser(req, res) {\n    const session = await getSession(req, res);\n    return session?.user || null;\n}\n/**\n * Refreshes the Auth0 session using the refresh token\n */ async function refreshSession(req, res) {\n    try {\n        // Get the current session\n        const session = await getSession(req, res);\n        if (!session?.refreshToken) {\n            console.warn(\"No refresh token available in session\");\n            return null;\n        }\n        // Call the Auth0 token endpoint to refresh the token\n        const tokenEndpoint = `https://${process.env.AUTH0_ISSUER_BASE_URL}/oauth/token`;\n        const response = await fetch(tokenEndpoint, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                grant_type: \"refresh_token\",\n                client_id: process.env.AUTH0_CLIENT_ID,\n                client_secret: process.env.AUTH0_CLIENT_SECRET,\n                refresh_token: session.refreshToken\n            })\n        });\n        if (!response.ok) {\n            const error = await response.text();\n            console.error(\"Failed to refresh Auth0 session:\", error);\n            return null;\n        }\n        const data = await response.json();\n        // Update the session with the new tokens\n        const updatedSession = {\n            ...session,\n            idToken: data.id_token,\n            accessToken: data.access_token,\n            refreshToken: data.refresh_token || session.refreshToken\n        };\n        // TODO: Update the session in the session store\n        // This requires access to the session store, which depends on your Auth0 setup\n        return updatedSession;\n    } catch (error) {\n        console.error(\"Error refreshing Auth0 session:\", error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/auth0.config.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/trpc/[trpc].ts":
/*!**************************************!*\
  !*** ./src/pages/api/trpc/[trpc].ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server/adapters/next */ \"@trpc/server/adapters/next\");\n/* harmony import */ var _server_api_root__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/server/api/root */ \"(api)/./src/server/api/root.ts\");\n/* harmony import */ var _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/server/api/trpc */ \"(api)/./src/server/api/trpc.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _server_api_root__WEBPACK_IMPORTED_MODULE_1__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__]);\n([_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__, _server_api_root__WEBPACK_IMPORTED_MODULE_1__, _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_0__.createNextApiHandler)({\n    router: _server_api_root__WEBPACK_IMPORTED_MODULE_1__.appRouter,\n    createContext: _server_api_trpc__WEBPACK_IMPORTED_MODULE_2__.createTRPCContext,\n    onError:  true ? ({ path, error })=>{\n        console.error(`❌ tRPC failed on ${path ?? \"<no-path>\"}: ${error.message}`);\n    } : 0\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0U7QUFDcEI7QUFDUTtBQUV0RCxpRUFBZUEsZ0ZBQW9CQSxDQUFDO0lBQ2xDRyxRQUFRRix1REFBU0E7SUFDakJHLGVBQWVGLCtEQUFpQkE7SUFDaENHLFNBQ0VDLEtBQXlCLEdBQ3JCLENBQUMsRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUU7UUFDZEMsUUFBUUQsS0FBSyxDQUNYLENBQUMsaUJBQWlCLEVBQUVELFFBQVEsWUFBWSxFQUFFLEVBQUVDLE1BQU1FLE9BQU8sQ0FBQyxDQUFDO0lBRS9ELElBQ0FDLENBQVNBO0FBQ2pCLEVBQUUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NoYXRncHQtY2xvbmUvLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzP2NlNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTmV4dEFwaUhhbmRsZXIgfSBmcm9tICdAdHJwYy9zZXJ2ZXIvYWRhcHRlcnMvbmV4dCc7XG5pbXBvcnQgeyBhcHBSb3V0ZXIgfSBmcm9tICdAL3NlcnZlci9hcGkvcm9vdCc7XG5pbXBvcnQgeyBjcmVhdGVUUlBDQ29udGV4dCB9IGZyb20gJ0Avc2VydmVyL2FwaS90cnBjJztcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlTmV4dEFwaUhhbmRsZXIoe1xuICByb3V0ZXI6IGFwcFJvdXRlcixcbiAgY3JlYXRlQ29udGV4dDogY3JlYXRlVFJQQ0NvbnRleHQsXG4gIG9uRXJyb3I6XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcbiAgICAgID8gKHsgcGF0aCwgZXJyb3IgfSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICBg4p2MIHRSUEMgZmFpbGVkIG9uICR7cGF0aCA/PyAnPG5vLXBhdGg+J306ICR7ZXJyb3IubWVzc2FnZX1gXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgOiB1bmRlZmluZWQsXG59KTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVOZXh0QXBpSGFuZGxlciIsImFwcFJvdXRlciIsImNyZWF0ZVRSUENDb250ZXh0Iiwicm91dGVyIiwiY3JlYXRlQ29udGV4dCIsIm9uRXJyb3IiLCJwcm9jZXNzIiwicGF0aCIsImVycm9yIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/trpc/[trpc].ts\n");

/***/ }),

/***/ "(api)/./src/server/api/root.ts":
/*!********************************!*\
  !*** ./src/server/api/root.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appRouter: () => (/* binding */ appRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./trpc */ \"(api)/./src/server/api/trpc.ts\");\n/* harmony import */ var _routers_chat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routers/chat */ \"(api)/./src/server/api/routers/chat.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc__WEBPACK_IMPORTED_MODULE_0__, _routers_chat__WEBPACK_IMPORTED_MODULE_1__]);\n([_trpc__WEBPACK_IMPORTED_MODULE_0__, _routers_chat__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst appRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_0__.createTRPCRouter)({\n    chat: _routers_chat__WEBPACK_IMPORTED_MODULE_1__.chatRouter\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvc2VydmVyL2FwaS9yb290LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUNFO0FBRXJDLE1BQU1FLFlBQVlGLHVEQUFnQkEsQ0FBQztJQUN4Q0csTUFBTUYscURBQVVBO0FBQ2xCLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaGF0Z3B0LWNsb25lLy4vc3JjL3NlcnZlci9hcGkvcm9vdC50cz9hOWI2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVRSUENSb3V0ZXIgfSBmcm9tICcuL3RycGMnO1xuaW1wb3J0IHsgY2hhdFJvdXRlciB9IGZyb20gJy4vcm91dGVycy9jaGF0JztcblxuZXhwb3J0IGNvbnN0IGFwcFJvdXRlciA9IGNyZWF0ZVRSUENSb3V0ZXIoe1xuICBjaGF0OiBjaGF0Um91dGVyLFxufSk7XG5cbmV4cG9ydCB0eXBlIEFwcFJvdXRlciA9IHR5cGVvZiBhcHBSb3V0ZXI7XG4iXSwibmFtZXMiOlsiY3JlYXRlVFJQQ1JvdXRlciIsImNoYXRSb3V0ZXIiLCJhcHBSb3V0ZXIiLCJjaGF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/server/api/root.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/routers/chat.ts":
/*!****************************************!*\
  !*** ./src/server/api/routers/chat.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chatRouter: () => (/* binding */ chatRouter)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"zod\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @google/generative-ai */ \"@google/generative-ai\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../trpc */ \"(api)/./src/server/api/trpc.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc_server__WEBPACK_IMPORTED_MODULE_1__, _google_generative_ai__WEBPACK_IMPORTED_MODULE_2__, _trpc__WEBPACK_IMPORTED_MODULE_3__]);\n([zod__WEBPACK_IMPORTED_MODULE_0__, _trpc_server__WEBPACK_IMPORTED_MODULE_1__, _google_generative_ai__WEBPACK_IMPORTED_MODULE_2__, _trpc__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// Initialize Google Gemini\n// Ensure the API key is loaded from your environment variables\nconst genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_2__.GoogleGenerativeAI(process.env.GOOGLE_GEMINI_API_KEY);\n// Model for text chat and understanding user-provided images.\nconst multiModalModel = genAI.getGenerativeModel({\n    model: \"gemini-2.5-flash\"\n});\n// Model specifically for generating new images from a text prompt.\nconst imageGenerationModel = genAI.getGenerativeModel({\n    model: \"gemini-2.0-flash-preview-image-generation\"\n});\nconst chatRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_3__.createTRPCRouter)({\n    sendMessage: _trpc__WEBPACK_IMPORTED_MODULE_3__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        message: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        conversationId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        imageBase64: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        mimeType: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n    })).mutation(async ({ input, ctx })=>{\n        const { message, conversationId, imageBase64, mimeType } = input;\n        if (!ctx.session?.user?.sub) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"User not authenticated or missing user ID\"\n            });\n        }\n        const userId = ctx.session.user.sub;\n        let currentConversationId = conversationId;\n        if (!currentConversationId) {\n            console.log(\"Creating new conversation for user:\", userId);\n            const title = message.substring(0, 50);\n            try {\n                const { data: conversation, error } = await ctx.supabase.from(\"conversations\").insert({\n                    user_id: userId,\n                    title: title\n                }).select().single();\n                if (error) throw error;\n                if (!conversation) throw new Error(\"No conversation data returned from Supabase after creation\");\n                currentConversationId = conversation.id;\n            } catch (error) {\n                console.error(\"Error in conversation creation logic:\", error);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"Failed to create conversation\",\n                    cause: error instanceof Error ? error : new Error(String(error))\n                });\n            }\n        }\n        let aiResponseContent;\n        let aiMessageType = \"text\";\n        let userMessageType = \"text\";\n        try {\n            const isImageGenerationRequest = message.trim().toLowerCase().startsWith(\"/image\");\n            const hasUploadedImage = !!(imageBase64 && mimeType);\n            if (isImageGenerationRequest) {\n                // Case 1: User wants to generate an image with `/image`\n                const prompt = message.replace(/^\\/image\\s*/i, \"\").trim();\n                console.log(`Generating image for prompt: \"${prompt}\"`);\n                try {\n                    // Direct REST API call to Gemini 2.0 Flash Image Generation model\n                    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-preview-image-generation:generateContent?key=${process.env.GOOGLE_GEMINI_API_KEY}`;\n                    const requestBody = {\n                        contents: [\n                            {\n                                role: \"user\",\n                                parts: [\n                                    {\n                                        text: prompt\n                                    }\n                                ]\n                            }\n                        ],\n                        generationConfig: {\n                            responseModalities: [\n                                \"TEXT\",\n                                \"IMAGE\"\n                            ]\n                        }\n                    };\n                    const response = await fetch(apiUrl, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(requestBody)\n                    });\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        throw new Error(`API request failed with status ${response.status}: ${JSON.stringify(errorData)}`);\n                    }\n                    const responseData = await response.json();\n                    console.log(\"Image generation response:\", JSON.stringify(responseData, null, 2));\n                    // Extract the image data from the response\n                    const imagePart = responseData.candidates?.[0]?.content?.parts?.find((part)=>part.inlineData?.mimeType?.startsWith(\"image/\"));\n                    if (imagePart?.inlineData) {\n                        const { mimeType, data } = imagePart.inlineData;\n                        aiResponseContent = `data:${mimeType};base64,${data}`;\n                        aiMessageType = \"image\";\n                        console.log(\"Successfully generated image with mimeType:\", mimeType);\n                    } else {\n                        // Check if there's any text content that might contain base64 data\n                        const textContent = responseData.candidates?.[0]?.content?.parts?.find((part)=>part.text)?.text;\n                        // If the text content looks like base64 data, try to format it as an image\n                        if (textContent && textContent.length > 1000 && /^[A-Za-z0-9+/=]+$/.test(textContent.trim())) {\n                            console.log(\"Found base64-like content in text response, formatting as image\");\n                            aiResponseContent = `data:image/png;base64,${textContent.trim()}`;\n                            aiMessageType = \"image\";\n                        } else {\n                            console.error(\"Image generation failed. Response:\", JSON.stringify(responseData, null, 2));\n                            aiResponseContent = textContent || \"I was unable to generate an image. The prompt may have been rejected. Please try again with a different prompt.\";\n                            aiMessageType = \"text\";\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Image generation error:\", error);\n                    // Fallback to text response if image generation fails\n                    const fallbackResult = await multiModalModel.generateContent(`I'm unable to generate an image right now. Here's a response to your prompt: ${prompt}`);\n                    const fallbackResponse = await fallbackResult.response;\n                    aiResponseContent = fallbackResponse.text();\n                    aiMessageType = \"text\";\n                }\n                userMessageType = \"image_prompt\";\n            } else if (hasUploadedImage) {\n                // Case 2: User uploaded an image and asked a question about it\n                // Use gemini-2.5-flash for image understanding and Q&A\n                console.log(`Generating response for prompt over image: \"${message}\"`);\n                const prompt = message;\n                const imagePart = {\n                    inlineData: {\n                        data: imageBase64,\n                        mimeType: mimeType\n                    }\n                };\n                const result = await multiModalModel.generateContent([\n                    prompt,\n                    imagePart\n                ]);\n                const response = await result.response;\n                aiResponseContent = response.text();\n                aiMessageType = \"text\";\n                userMessageType = \"image_query\";\n            } else {\n                // Case 3: Standard text-only message\n                // Retrieve conversation history for context\n                let conversationHistory = [];\n                if (currentConversationId) {\n                    const { data: messages, error } = await ctx.supabase.from(\"messages\").select(\"*\").eq(\"conversation_id\", currentConversationId).eq(\"user_id\", userId).order(\"created_at\", {\n                        ascending: true\n                    }).limit(20); // Limit to last 20 messages to avoid token limits\n                    if (!error && messages) {\n                        conversationHistory = messages;\n                    }\n                }\n                // Build conversation context for AI\n                const conversationParts = [];\n                // Add conversation history\n                for (const msg of conversationHistory){\n                    if (msg.message_type === \"text\") {\n                        conversationParts.push({\n                            role: msg.role === \"user\" ? \"user\" : \"model\",\n                            parts: [\n                                {\n                                    text: msg.content\n                                }\n                            ]\n                        });\n                    }\n                }\n                // Add current user message\n                conversationParts.push({\n                    role: \"user\",\n                    parts: [\n                        {\n                            text: message\n                        }\n                    ]\n                });\n                console.log(`Generating response with ${conversationHistory.length} previous messages for context`);\n                // Use gemini-2.5-flash for text chat with conversation history\n                const result = await multiModalModel.generateContent({\n                    contents: conversationParts\n                });\n                const response = await result.response;\n                aiResponseContent = response.text();\n                aiMessageType = \"text\";\n                userMessageType = \"text\";\n            }\n        } catch (error) {\n            console.error(\"Error generating AI response:\", error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"Failed to generate AI response\",\n                cause: error\n            });\n        }\n        // --- Save messages to database ---\n        try {\n            await ctx.supabase.from(\"messages\").insert({\n                content: message,\n                role: \"user\",\n                message_type: userMessageType,\n                user_id: userId,\n                conversation_id: currentConversationId\n            });\n            const { data: aiMessage, error: aiMessageError } = await ctx.supabase.from(\"messages\").insert({\n                content: aiResponseContent,\n                role: \"assistant\",\n                message_type: aiMessageType,\n                user_id: userId,\n                conversation_id: currentConversationId\n            }).select().single();\n            if (aiMessageError) throw aiMessageError;\n            return {\n                aiMessage,\n                conversationId: currentConversationId\n            };\n        } catch (error) {\n            console.error(\"Error saving messages to Supabase:\", error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"Failed to save messages to the database.\",\n                cause: error\n            });\n        }\n    }),\n    getConversations: _trpc__WEBPACK_IMPORTED_MODULE_3__.protectedProcedure.query(async ({ ctx })=>{\n        if (!ctx.session?.user?.sub) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"User not authenticated or missing user ID\"\n            });\n        }\n        const userId = ctx.session.user.sub;\n        const { data: conversations, error } = await ctx.supabase.from(\"conversations\").select(\"*\").eq(\"user_id\", userId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) {\n            console.error(\"Error fetching conversations:\", error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"Could not fetch conversations.\"\n            });\n        }\n        return conversations || [];\n    }),\n    getMessages: _trpc__WEBPACK_IMPORTED_MODULE_3__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        conversationId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n    })).query(async ({ input, ctx })=>{\n        const { conversationId } = input;\n        if (!ctx.session?.user?.sub) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"UNAUTHORIZED\",\n                message: \"User not authenticated or missing user ID\"\n            });\n        }\n        const userId = ctx.session.user.sub;\n        const { data: messages, error } = await ctx.supabase.from(\"messages\").select(\"*\").eq(\"conversation_id\", conversationId).eq(\"user_id\", userId).order(\"created_at\", {\n            ascending: true\n        });\n        if (error) {\n            console.error(\"Error fetching messages:\", error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_1__.TRPCError({\n                code: \"INTERNAL_SERVER_ERROR\",\n                message: \"Could not fetch messages.\"\n            });\n        }\n        return messages || [];\n    })\n});\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/api/routers/chat.ts\n");

/***/ }),

/***/ "(api)/./src/server/api/trpc.ts":
/*!********************************!*\
  !*** ./src/server/api/trpc.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTRPCContext: () => (/* binding */ createTRPCContext),\n/* harmony export */   createTRPCRouter: () => (/* binding */ createTRPCRouter),\n/* harmony export */   protectedProcedure: () => (/* binding */ protectedProcedure),\n/* harmony export */   publicProcedure: () => (/* binding */ publicProcedure)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _auth0_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/auth0.config */ \"(api)/./src/auth0.config.ts\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! superjson */ \"superjson\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, superjson__WEBPACK_IMPORTED_MODULE_3__, zod__WEBPACK_IMPORTED_MODULE_4__]);\n([_trpc_server__WEBPACK_IMPORTED_MODULE_0__, superjson__WEBPACK_IMPORTED_MODULE_3__, zod__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n// Verify required environment variables\nif (false) {}\nif (false) {}\n// Create a base Supabase client for unauthenticated operations\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://wbelghenamkkemtupbhl.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndiZWxnaGVuYW1ra2VtdHVwYmhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzMxODksImV4cCI6MjA2OTk0OTE4OX0.TquSHKemQ1fgfztYXnyMIVSnDRiGjJxBQ9dFyWUtdQM\", {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: true,\n        detectSessionInUrl: false\n    }\n});\n// Create a new Supabase client with the user's ID token for RLS\nconst createSupabaseClient = async (session)=>{\n    if (!session?.idToken) {\n        // Return an unauthenticated client if no session or token\n        return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://wbelghenamkkemtupbhl.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndiZWxnaGVuYW1ra2VtdHVwYmhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzMxODksImV4cCI6MjA2OTk0OTE4OX0.TquSHKemQ1fgfztYXnyMIVSnDRiGjJxBQ9dFyWUtdQM\", {\n            auth: {\n                autoRefreshToken: false,\n                persistSession: false,\n                detectSessionInUrl: false\n            }\n        });\n    }\n    // Create authenticated client with the provided token\n    const client = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(\"https://wbelghenamkkemtupbhl.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndiZWxnaGVuYW1ra2VtdHVwYmhsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQzNzMxODksImV4cCI6MjA2OTk0OTE4OX0.TquSHKemQ1fgfztYXnyMIVSnDRiGjJxBQ9dFyWUtdQM\", {\n        auth: {\n            autoRefreshToken: true,\n            persistSession: false,\n            detectSessionInUrl: false\n        },\n        global: {\n            headers: {\n                Authorization: `Bearer ${session.idToken}`\n            }\n        }\n    });\n    return client;\n};\n/**\n * Tests the Supabase connection and refreshes the session if needed\n */ async function testSupabaseConnection(client, session, req, res) {\n    if (!session?.idToken) {\n        return {\n            client,\n            session\n        };\n    }\n    try {\n        // Test the connection with a simple query\n        const { error } = await client.from(\"conversations\").select(\"*\").limit(1);\n        if (error) {\n            console.warn(\"Supabase connection test failed:\", error);\n            // If the error is due to an expired token, try to refresh it\n            if (error.code === \"PGRST301\" && session.refreshToken) {\n                console.log(\"Token expired, attempting to refresh...\");\n                const newSession = await (0,_auth0_config__WEBPACK_IMPORTED_MODULE_1__.refreshSession)(req, res);\n                if (newSession?.idToken) {\n                    console.log(\"Successfully refreshed Auth0 session\");\n                    // Create a new client with the refreshed token\n                    const newClient = await createSupabaseClient(newSession);\n                    return {\n                        client: newClient,\n                        session: newSession\n                    };\n                }\n            }\n        } else {\n            console.log(\"Successfully connected to Supabase with RLS\");\n        }\n    } catch (error) {\n        console.error(\"Error testing Supabase connection:\", error);\n    }\n    return {\n        client,\n        session\n    };\n}\nconst createTRPCContext = async (opts)=>{\n    const { req, res } = opts;\n    // Get the session with our custom configuration\n    let session = await (0,_auth0_config__WEBPACK_IMPORTED_MODULE_1__.getSession)(req, res);\n    // Log session information for debugging\n    console.log(\"Session data:\", JSON.stringify({\n        hasSession: !!session,\n        hasIdToken: !!(session?.idToken),\n        hasAccessToken: !!(session?.accessToken),\n        hasRefreshToken: !!(session?.refreshToken),\n        user: session?.user ? {\n            sub: session.user.sub,\n            email: session.user.email,\n            name: session.user.name\n        } : null\n    }, null, 2));\n    // Ensure session is properly typed and handle undefined case\n    const typedSession = session || null;\n    // Create a Supabase client with the current session\n    let client = await createSupabaseClient(typedSession);\n    // Test the connection and refresh the session if needed\n    const connectionResult = await testSupabaseConnection(client, typedSession, req, res);\n    client = connectionResult.client;\n    session = connectionResult.session;\n    return {\n        session,\n        supabase: client\n    };\n};\nconst t = _trpc_server__WEBPACK_IMPORTED_MODULE_0__.initTRPC.context().create({\n    transformer: superjson__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    errorFormatter ({ shape, error }) {\n        return {\n            ...shape,\n            data: {\n                ...shape.data,\n                zodError: error.cause instanceof zod__WEBPACK_IMPORTED_MODULE_4__.ZodError ? error.cause.flatten() : null\n            }\n        };\n    }\n});\nconst createTRPCRouter = t.router;\nconst publicProcedure = t.procedure;\nconst enforceUserIsAuthed = t.middleware(({ ctx, next })=>{\n    if (!ctx.session || !ctx.session.user) {\n        throw new _trpc_server__WEBPACK_IMPORTED_MODULE_0__.TRPCError({\n            code: \"UNAUTHORIZED\"\n        });\n    }\n    return next({\n        ctx: {\n            session: {\n                ...ctx.session,\n                user: ctx.session.user\n            },\n            supabase: ctx.supabase\n        }\n    });\n});\nconst protectedProcedure = t.procedure.use(enforceUserIsAuthed);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/server/api/trpc.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0"], () => (__webpack_exec__("(api)/./node_modules/.pnpm/next@14.0.4_@babel+core@7.28.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftrpc%2F%5Btrpc%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();